name: TorrDLoader

run-name: "TorrDLoader for ${{ inputs.JobDestType }}"

on:
  workflow_dispatch:
    inputs:
      TorrentURL:
        description: "TorrentURL, https://site.address/file.torrent"
        required: false
        type: string
      MagnetURI:
        description: "MagnetURI, magnet:?xt=urn:btih:HASH&dn=NAME&tr=TRACKER"
        required: false
        type: string
      FileIdx:
        description: "FileIdx, Range of Files in Torrent"
        required: false
        type: string
      JobDestType:
        description: "Destination, Public / ShareZone/ AniMaze"
        required: true
        type: choice
        options:
        - "Public"
        - "ShareZone"
        - "AniMaze"
      CustomEnvs:
        description: "Custom Env Vars (pipe-separated), x=a|y=2"
        type: string
        required: false


env:
  baseScrAddr: "https://gist.github.com/rokibhasansagar/defcf75ce810fa40ac6200d089de969b"
  TorrentURL: ${{ github.event.inputs.TorrentURL }}
  MagnetURI: ${{ github.event.inputs.MagnetURI }}
  FileIdx: ${{ github.event.inputs.FileIdx }}
  JobDestType: ${{ github.event.inputs.JobDestType }}
  CustomEnvs: ${{ github.event.inputs.CustomEnvs }}
  TorrDLoader_Hash: ${{ secrets.TorrDLoader_Hash }}
  RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}

jobs:
  transloader:
    name: "Torrent Downloader"
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        with:
          credential: "yes"
          git_cookies: "no"
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Run TorrDLoader Script
        run: |
          # Prepare Custom Env Var Overrides
          if [[ ${CustomEnvs} != '' ]]; then
            for i in $(sed 's/|/\n/g' <<<"${CustomEnvs}"); do
              v=$(awk -F'=' '{print $1}' <<<"${i}")
              w=$(cut -d'=' -f2- <<<"${i}" | sed 's#"##g')
              echo $v="$w" && export $v=$w
            done
          fi
          unset v w 2>/dev/null || true
          # Execute Script Stealthly
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null

          export baseScrHash="$(git ls-remote -q "${baseScrAddr}" HEAD | awk '{print $1}')"
          echo -e "latestRevision=${baseScrHash}"

          # Get Scriptlets
          ( curl -sL "${baseScrAddr}/raw/${baseScrHash}/zSystemdResolved.fix" | bash 2>/dev/null || true )
          curl -sL "${baseScrAddr}/raw/${baseScrHash}/torrent-to-ms365.base.sh" -o torrent-to-ms365.base.script
          curl -sL "${baseScrAddr}/raw/${baseScrHash}/zPublicUpload.block" -O
          curl -sL "${baseScrAddr}/raw/${baseScrHash}/zShareZoneUpload.block" -O
          curl -sL "${baseScrAddr}/raw/${baseScrHash}/zAniMazeMod.block" -O
          curl -sL "${baseScrAddr}/raw/${baseScrHash}/zAniMazeUpload.block" -O
          curl -sL "${baseScrAddr}/raw/${baseScrHash}/zSeed.block" -O

          # Put Together The Complete Script
          case "${JobDestType}" in
            "Public")
              sed -i -e '/Upload Block/r zPublicUpload.block' ./torrent-to-ms365.base.script
              ;;
            "ShareZone")
              sed -i -e '/Upload Block/r zShareZoneUpload.block' ./torrent-to-ms365.base.script
              ;;
            "AniMaze")
              sed -i -e '/Modification Block/r zAniMazeMod.block' ./torrent-to-ms365.base.script
              sed -i -e '/Upload Block/r zAniMazeUpload.block' ./torrent-to-ms365.base.script
              ;;
          esac
          sed -e '/Seed Block/r zSeed.block' ./torrent-to-ms365.base.script >./torrentLoader.sh

          # Run Script
          source ./torrentLoader.sh
          eval 'set -o history' 2>/dev/null

